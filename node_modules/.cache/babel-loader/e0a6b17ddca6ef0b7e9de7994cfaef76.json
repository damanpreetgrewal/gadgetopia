{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar events = require('../utils/events.cjs.js');\n\nconst mouseEvent = (element, name, action) => event => {\n  if (event.pointerType && event.pointerType !== \"mouse\") return;\n  action();\n  events.dispatchPointerEvent(element, name, event);\n};\n\nconst hover = {\n  isActive: options => Boolean(options.hover),\n  subscribe: (element, {\n    enable,\n    disable\n  }) => {\n    const onEnter = mouseEvent(element, \"hoverstart\", enable);\n    const onLeave = mouseEvent(element, \"hoverend\", disable);\n    element.addEventListener(\"pointerenter\", onEnter);\n    element.addEventListener(\"pointerleave\", onLeave);\n    return () => {\n      element.removeEventListener(\"pointerenter\", onEnter);\n      element.removeEventListener(\"pointerleave\", onLeave);\n    };\n  }\n};\nexports.hover = hover;","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/node_modules/@motionone/dom/dist/state/gestures/hover.cjs.js"],"names":["Object","defineProperty","exports","value","events","require","mouseEvent","element","name","action","event","pointerType","dispatchPointerEvent","hover","isActive","options","Boolean","subscribe","enable","disable","onEnter","onLeave","addEventListener","removeEventListener"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AAEA,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAUC,IAAV,EAAgBC,MAAhB,KAA4BC,KAAD,IAAW;AACrD,MAAIA,KAAK,CAACC,WAAN,IAAqBD,KAAK,CAACC,WAAN,KAAsB,OAA/C,EACI;AACJF,EAAAA,MAAM;AACNL,EAAAA,MAAM,CAACQ,oBAAP,CAA4BL,OAA5B,EAAqCC,IAArC,EAA2CE,KAA3C;AACH,CALD;;AAMA,MAAMG,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAGC,OAAD,IAAaC,OAAO,CAACD,OAAO,CAACF,KAAT,CADpB;AAEVI,EAAAA,SAAS,EAAE,CAACV,OAAD,EAAU;AAAEW,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAV,KAAkC;AACzC,UAAMC,OAAO,GAAGd,UAAU,CAACC,OAAD,EAAU,YAAV,EAAwBW,MAAxB,CAA1B;AACA,UAAMG,OAAO,GAAGf,UAAU,CAACC,OAAD,EAAU,UAAV,EAAsBY,OAAtB,CAA1B;AACAZ,IAAAA,OAAO,CAACe,gBAAR,CAAyB,cAAzB,EAAyCF,OAAzC;AACAb,IAAAA,OAAO,CAACe,gBAAR,CAAyB,cAAzB,EAAyCD,OAAzC;AACA,WAAO,MAAM;AACTd,MAAAA,OAAO,CAACgB,mBAAR,CAA4B,cAA5B,EAA4CH,OAA5C;AACAb,MAAAA,OAAO,CAACgB,mBAAR,CAA4B,cAA5B,EAA4CF,OAA5C;AACH,KAHD;AAIH;AAXS,CAAd;AAcAnB,OAAO,CAACW,KAAR,GAAgBA,KAAhB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar events = require('../utils/events.cjs.js');\n\nconst mouseEvent = (element, name, action) => (event) => {\n    if (event.pointerType && event.pointerType !== \"mouse\")\n        return;\n    action();\n    events.dispatchPointerEvent(element, name, event);\n};\nconst hover = {\n    isActive: (options) => Boolean(options.hover),\n    subscribe: (element, { enable, disable }) => {\n        const onEnter = mouseEvent(element, \"hoverstart\", enable);\n        const onLeave = mouseEvent(element, \"hoverend\", disable);\n        element.addEventListener(\"pointerenter\", onEnter);\n        element.addEventListener(\"pointerleave\", onLeave);\n        return () => {\n            element.removeEventListener(\"pointerenter\", onEnter);\n            element.removeEventListener(\"pointerleave\", onLeave);\n        };\n    },\n};\n\nexports.hover = hover;\n"]},"metadata":{},"sourceType":"script"}