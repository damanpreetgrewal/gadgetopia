{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar types = require('@motionone/types');\n\nconst data = new WeakMap();\n\nfunction getAnimationData(element) {\n  if (!data.has(element)) {\n    data.set(element, {\n      transforms: [],\n      values: new Map()\n    });\n  }\n\n  return data.get(element);\n}\n\nfunction getMotionValue(motionValues, name) {\n  if (!motionValues.has(name)) {\n    motionValues.set(name, new types.MotionValue());\n  }\n\n  return motionValues.get(name);\n}\n\nexports.getAnimationData = getAnimationData;\nexports.getMotionValue = getMotionValue;","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/node_modules/@motionone/dom/dist/animate/data.cjs.js"],"names":["Object","defineProperty","exports","value","types","require","data","WeakMap","getAnimationData","element","has","set","transforms","values","Map","get","getMotionValue","motionValues","name","MotionValue"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AAEA,MAAMC,IAAI,GAAG,IAAIC,OAAJ,EAAb;;AACA,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AAC/B,MAAI,CAACH,IAAI,CAACI,GAAL,CAASD,OAAT,CAAL,EAAwB;AACpBH,IAAAA,IAAI,CAACK,GAAL,CAASF,OAAT,EAAkB;AACdG,MAAAA,UAAU,EAAE,EADE;AAEdC,MAAAA,MAAM,EAAE,IAAIC,GAAJ;AAFM,KAAlB;AAIH;;AACD,SAAOR,IAAI,CAACS,GAAL,CAASN,OAAT,CAAP;AACH;;AACD,SAASO,cAAT,CAAwBC,YAAxB,EAAsCC,IAAtC,EAA4C;AACxC,MAAI,CAACD,YAAY,CAACP,GAAb,CAAiBQ,IAAjB,CAAL,EAA6B;AACzBD,IAAAA,YAAY,CAACN,GAAb,CAAiBO,IAAjB,EAAuB,IAAId,KAAK,CAACe,WAAV,EAAvB;AACH;;AACD,SAAOF,YAAY,CAACF,GAAb,CAAiBG,IAAjB,CAAP;AACH;;AAEDhB,OAAO,CAACM,gBAAR,GAA2BA,gBAA3B;AACAN,OAAO,CAACc,cAAR,GAAyBA,cAAzB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar types = require('@motionone/types');\n\nconst data = new WeakMap();\nfunction getAnimationData(element) {\n    if (!data.has(element)) {\n        data.set(element, {\n            transforms: [],\n            values: new Map(),\n        });\n    }\n    return data.get(element);\n}\nfunction getMotionValue(motionValues, name) {\n    if (!motionValues.has(name)) {\n        motionValues.set(name, new types.MotionValue());\n    }\n    return motionValues.get(name);\n}\n\nexports.getAnimationData = getAnimationData;\nexports.getMotionValue = getMotionValue;\n"]},"metadata":{},"sourceType":"script"}