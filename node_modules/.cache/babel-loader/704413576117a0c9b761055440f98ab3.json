{"ast":null,"code":"import _slicedToArray from\"C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import Message from'../components/Message';import Loader from'../components/Loader';import{getUserDetails,updateUser}from'../actions/userActions';import{USER_UPDATE_RESET}from'../constants/userConstants';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UserEditScreen=function UserEditScreen(_ref){var match=_ref.match,history=_ref.history;var userId=match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,errorUpdate=userUpdate.error,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userslist');}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[user,dispatch,userId,successUpdate,history]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:userId,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Link,{to:\"/admin/userslist\",className:\"btn btn-outline-dark my-3\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"far fa-hand-point-left\"}),\" Go Back\"]}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsxs(Message,{variant:\"danger\",children:[error,\" \",/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-exclamation-triangle\"})]}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Full Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",required:true,placeholder:\"Enter your full name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",required:true,placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isAdmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"primary\",children:[\"Update  \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user-edit\"})]})]})]})]});};export default UserEditScreen;","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Form","Button","useDispatch","useSelector","FormContainer","Message","Loader","getUserDetails","updateUser","USER_UPDATE_RESET","Link","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","type","push","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\nimport { Link } from 'react-router-dom'\n\n\nconst UserEditScreen = ({ match, history }) => {\n    const userId = match.params.id\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n\n    const dispatch = useDispatch()\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({\n                type: USER_UPDATE_RESET\n            })\n            history.push('/admin/userslist')\n        } else {\n            if (!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    }, [user, dispatch, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({\n            _id: userId, name, email, isAdmin\n        }))\n    }\n    return (\n        <>\n            <Link to='/admin/userslist' className='btn btn-outline-dark my-3'><i className=\"far fa-hand-point-left\"></i> Go Back</Link>\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error} <i class=\"fas fa-exclamation-triangle\"></i></Message> : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Full Name</Form.Label>\n                            <Form.Control type='name' required placeholder='Enter your full name' value={name} onChange={e => setName(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group><br />\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control type='email' required placeholder='Enter email' value={email} onChange={e => setEmail(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group><br />\n                        <Form.Group controlId='isAdmin'>\n                            <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={e => setIsAdmin(e.target.checked)}>\n                            </Form.Check>\n                        </Form.Group><br />\n                        <Button type='submit' variant='primary'>\n                            Update  <i className=\"fas fa-user-edit\"></i>\n                        </Button>\n                    </Form>\n                )}\n\n            </FormContainer>\n        </>\n\n    )\n}\n\nexport default UserEditScreen\n"]},"metadata":{},"sourceType":"module"}