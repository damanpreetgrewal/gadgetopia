{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cssVar = require('./utils/css-var.cjs.js');\n\nvar getStyleName = require('./utils/get-style-name.cjs.js');\n\nvar transforms = require('./utils/transforms.cjs.js');\n\nconst style = {\n  get: (element, name) => {\n    name = getStyleName.getStyleName(name);\n    let value = cssVar.isCssVar(name) ? element.style.getPropertyValue(name) : getComputedStyle(element)[name];\n\n    if (!value && value !== 0) {\n      const definition = transforms.transformDefinitions.get(name);\n      if (definition) value = definition.initialValue;\n    }\n\n    return value;\n  },\n  set: (element, name, value) => {\n    name = getStyleName.getStyleName(name);\n\n    if (cssVar.isCssVar(name)) {\n      element.style.setProperty(name, value);\n    } else {\n      element.style[name] = value;\n    }\n  }\n};\nexports.style = style;","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/node_modules/@motionone/dom/dist/animate/style.cjs.js"],"names":["Object","defineProperty","exports","value","cssVar","require","getStyleName","transforms","style","get","element","name","isCssVar","getPropertyValue","getComputedStyle","definition","transformDefinitions","initialValue","set","setProperty"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,+BAAD,CAA1B;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AAEA,MAAMG,KAAK,GAAG;AACVC,EAAAA,GAAG,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACpBA,IAAAA,IAAI,GAAGL,YAAY,CAACA,YAAb,CAA0BK,IAA1B,CAAP;AACA,QAAIR,KAAK,GAAGC,MAAM,CAACQ,QAAP,CAAgBD,IAAhB,IACND,OAAO,CAACF,KAAR,CAAcK,gBAAd,CAA+BF,IAA/B,CADM,GAENG,gBAAgB,CAACJ,OAAD,CAAhB,CAA0BC,IAA1B,CAFN;;AAGA,QAAI,CAACR,KAAD,IAAUA,KAAK,KAAK,CAAxB,EAA2B;AACvB,YAAMY,UAAU,GAAGR,UAAU,CAACS,oBAAX,CAAgCP,GAAhC,CAAoCE,IAApC,CAAnB;AACA,UAAII,UAAJ,EACIZ,KAAK,GAAGY,UAAU,CAACE,YAAnB;AACP;;AACD,WAAOd,KAAP;AACH,GAZS;AAaVe,EAAAA,GAAG,EAAE,CAACR,OAAD,EAAUC,IAAV,EAAgBR,KAAhB,KAA0B;AAC3BQ,IAAAA,IAAI,GAAGL,YAAY,CAACA,YAAb,CAA0BK,IAA1B,CAAP;;AACA,QAAIP,MAAM,CAACQ,QAAP,CAAgBD,IAAhB,CAAJ,EAA2B;AACvBD,MAAAA,OAAO,CAACF,KAAR,CAAcW,WAAd,CAA0BR,IAA1B,EAAgCR,KAAhC;AACH,KAFD,MAGK;AACDO,MAAAA,OAAO,CAACF,KAAR,CAAcG,IAAd,IAAsBR,KAAtB;AACH;AACJ;AArBS,CAAd;AAwBAD,OAAO,CAACM,KAAR,GAAgBA,KAAhB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cssVar = require('./utils/css-var.cjs.js');\nvar getStyleName = require('./utils/get-style-name.cjs.js');\nvar transforms = require('./utils/transforms.cjs.js');\n\nconst style = {\n    get: (element, name) => {\n        name = getStyleName.getStyleName(name);\n        let value = cssVar.isCssVar(name)\n            ? element.style.getPropertyValue(name)\n            : getComputedStyle(element)[name];\n        if (!value && value !== 0) {\n            const definition = transforms.transformDefinitions.get(name);\n            if (definition)\n                value = definition.initialValue;\n        }\n        return value;\n    },\n    set: (element, name, value) => {\n        name = getStyleName.getStyleName(name);\n        if (cssVar.isCssVar(name)) {\n            element.style.setProperty(name, value);\n        }\n        else {\n            element.style[name] = value;\n        }\n    },\n};\n\nexports.style = style;\n"]},"metadata":{},"sourceType":"script"}