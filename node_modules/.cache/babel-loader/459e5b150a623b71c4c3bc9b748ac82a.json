{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar utils = require('@motionone/utils');\n\nconst namedEdges = {\n  start: 0,\n  center: 0.5,\n  end: 1\n};\n\nfunction resolveEdge(edge, length, inset = 0) {\n  let delta = 0;\n  /**\n   * If we have this edge defined as a preset, replace the definition\n   * with the numerical value.\n   */\n\n  if (namedEdges[edge] !== undefined) {\n    edge = namedEdges[edge];\n  }\n  /**\n   * Handle unit values\n   */\n\n\n  if (utils.isString(edge)) {\n    const asNumber = parseFloat(edge);\n\n    if (edge.endsWith(\"px\")) {\n      delta = asNumber;\n    } else if (edge.endsWith(\"%\")) {\n      edge = asNumber / 100;\n    } else if (edge.endsWith(\"vw\")) {\n      delta = asNumber / 100 * document.documentElement.clientWidth;\n    } else if (edge.endsWith(\"vh\")) {\n      delta = asNumber / 100 * document.documentElement.clientHeight;\n    } else {\n      edge = asNumber;\n    }\n  }\n  /**\n   * If the edge is defined as a number, handle as a progress value.\n   */\n\n\n  if (utils.isNumber(edge)) {\n    delta = length * edge;\n  }\n\n  return inset + delta;\n}\n\nexports.namedEdges = namedEdges;\nexports.resolveEdge = resolveEdge;","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.cjs.js"],"names":["Object","defineProperty","exports","value","utils","require","namedEdges","start","center","end","resolveEdge","edge","length","inset","delta","undefined","isString","asNumber","parseFloat","endsWith","document","documentElement","clientWidth","clientHeight","isNumber"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,CADQ;AAEfC,EAAAA,MAAM,EAAE,GAFO;AAGfC,EAAAA,GAAG,EAAE;AAHU,CAAnB;;AAKA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,KAAK,GAAG,CAA3C,EAA8C;AAC1C,MAAIC,KAAK,GAAG,CAAZ;AACA;AACJ;AACA;AACA;;AACI,MAAIR,UAAU,CAACK,IAAD,CAAV,KAAqBI,SAAzB,EAAoC;AAChCJ,IAAAA,IAAI,GAAGL,UAAU,CAACK,IAAD,CAAjB;AACH;AACD;AACJ;AACA;;;AACI,MAAIP,KAAK,CAACY,QAAN,CAAeL,IAAf,CAAJ,EAA0B;AACtB,UAAMM,QAAQ,GAAGC,UAAU,CAACP,IAAD,CAA3B;;AACA,QAAIA,IAAI,CAACQ,QAAL,CAAc,IAAd,CAAJ,EAAyB;AACrBL,MAAAA,KAAK,GAAGG,QAAR;AACH,KAFD,MAGK,IAAIN,IAAI,CAACQ,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACzBR,MAAAA,IAAI,GAAGM,QAAQ,GAAG,GAAlB;AACH,KAFI,MAGA,IAAIN,IAAI,CAACQ,QAAL,CAAc,IAAd,CAAJ,EAAyB;AAC1BL,MAAAA,KAAK,GAAIG,QAAQ,GAAG,GAAZ,GAAmBG,QAAQ,CAACC,eAAT,CAAyBC,WAApD;AACH,KAFI,MAGA,IAAIX,IAAI,CAACQ,QAAL,CAAc,IAAd,CAAJ,EAAyB;AAC1BL,MAAAA,KAAK,GAAIG,QAAQ,GAAG,GAAZ,GAAmBG,QAAQ,CAACC,eAAT,CAAyBE,YAApD;AACH,KAFI,MAGA;AACDZ,MAAAA,IAAI,GAAGM,QAAP;AACH;AACJ;AACD;AACJ;AACA;;;AACI,MAAIb,KAAK,CAACoB,QAAN,CAAeb,IAAf,CAAJ,EAA0B;AACtBG,IAAAA,KAAK,GAAGF,MAAM,GAAGD,IAAjB;AACH;;AACD,SAAOE,KAAK,GAAGC,KAAf;AACH;;AAEDZ,OAAO,CAACI,UAAR,GAAqBA,UAArB;AACAJ,OAAO,CAACQ,WAAR,GAAsBA,WAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('@motionone/utils');\n\nconst namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (utils.isString(edge)) {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (utils.isNumber(edge)) {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexports.namedEdges = namedEdges;\nexports.resolveEdge = resolveEdge;\n"]},"metadata":{},"sourceType":"script"}