{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daman\\\\Desktop\\\\Final Project\\\\gadgetopia\\\\frontend\\\\src\\\\screens\\\\EditProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProductsDetails, updateProduct } from \"../actions/productActions\";\nimport { Link } from \"react-router-dom\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditProductScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [uploadError, setUploadError] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductsDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n        setRating(product.rating);\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n    console.log(uploading);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      console.log(uploading);\n      setUploading(false);\n      setUploadError(false);\n    } catch (error) {\n      setUploadError(true);\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log('Here on submit Button: '.productId);\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock,\n      rating\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-outline-dark my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-hand-point-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), \" Go Back\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), successUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: [\"Product Updated successfuly\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [errorUpdate, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 27\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [error, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"Enter your full name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Price \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Image \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter image url\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: uploading === false && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-exclamation-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this), \" Only jpg/jpeg/png Files\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-exclamation-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this),\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), uploadError && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: [\"Sorry \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-sad-tear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this), \" , the file has to be a jpg/jpeg/png \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-bomb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Brand \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" countInStock \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Category \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            required: true,\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            required: true,\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: [\"Update \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditProductScreen, \"qMrnDdAmjz+O7zeBVp0LnHDC2CY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditProductScreen;\nexport default EditProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductScreen\");","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/src/screens/EditProductScreen.js"],"names":["React","useState","useEffect","axios","Form","Button","useDispatch","useSelector","FormContainer","Message","Loader","listProductsDetails","updateProduct","Link","PRODUCT_UPDATE_RESET","EditProductScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","rating","setRating","uploading","setUploading","uploadError","setUploadError","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","uploadFileHandler","e","file","target","files","formData","FormData","append","console","log","config","headers","data","post","submitHandler","preventDefault","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProductsDetails, updateProduct } from \"../actions/productActions\";\nimport { Link } from \"react-router-dom\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nconst EditProductScreen = ({ match, history }) => {\n  const productId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [uploadError, setUploadError] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET,\n      });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductsDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n        setRating(product.rating);\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate]);\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n    console.log(uploading);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n\n      setImage(data);\n      console.log(uploading);\n      setUploading(false);\n      setUploadError(false);\n    } catch (error) {\n      setUploadError(true);\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log('Here on submit Button: '.productId);\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n        rating,\n      })\n    );\n  };\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-outline-dark my-3\">\n        <i className=\"far fa-hand-point-left\"></i> Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {successUpdate && (\n          <Message variant=\"success\">\n            Product Updated successfuly<i className=\"fas fa-check\"></i>\n          </Message>\n        )}\n        {loadingUpdate && <Loader />}\n        {errorUpdate && (\n          <Message variant=\"danger\">\n            {errorUpdate} <i className=\"fas fa-exclamation-triangle\"></i>{\" \"}\n          </Message>\n        )}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">\n            {error} <i className=\"fas fa-exclamation-triangle\"></i>\n          </Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label> Product Name</Form.Label>\n              <Form.Control\n                required\n                type=\"name\"\n                placeholder=\"Enter your full name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <br />\n\n            <Form.Group controlId=\"price\">\n              <Form.Label> Price </Form.Label>\n              <Form.Control\n                required\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <br />\n\n            <Form.Group controlId=\"image\">\n              <Form.Label> Image </Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter image url\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <br />\n              <Form.File\n                id=\"image-file\"\n                label={\n                  uploading === false && (\n                    <Message variant=\"info\">\n                      <i className=\"fas fa-exclamation-circle\"></i> Only\n                      jpg/jpeg/png Files{\" \"}\n                      <i className=\"fas fa-exclamation-circle\"></i>\n                    </Message>\n                  )\n                }\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n              {uploadError && (\n                <Message variant=\"danger\">\n                  Sorry <i className=\"far fa-sad-tear\"></i> , the file has to be\n                  a jpg/jpeg/png <i className=\"fas fa-bomb\"></i>\n                </Message>\n              )}\n            </Form.Group>\n            <br />\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label> Brand </Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <br />\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label> countInStock </Form.Label>\n              <Form.Control\n                required\n                type=\"number\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <br />\n\n            <Form.Group controlId=\"category\">\n              <Form.Label> Category </Form.Label>\n              <Form.Control\n                type=\"text\"\n                required\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <br />\n\n            <Form.Group controlId=\"description\">\n              <Form.Label> Description </Form.Label>\n              <Form.Control\n                type=\"text\"\n                required\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <br />\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update <i className=\"fas fa-user-edit\"></i>\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default EditProductScreen;\n"]},"metadata":{},"sourceType":"module"}