{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daman\\\\Desktop\\\\Final Project\\\\gadgetopia\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { listMyOrders } from '../actions/orderAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = ({\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setComfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const dispatch = useDispatch();\n  const costumerOrderList = useSelector(state => state.costumerOrderList);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = costumerOrderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const costumerOrders = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = costumerOrders;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name || !user || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n\n        if (loading === false) {\n          setIsUpdated(true);\n          setTimeout(() => {\n            setIsUpdated(false);\n          }, 4000);\n        }\n\n        setMessage(null);\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success, loading]);\n\n  const submitHandler = e => {\n    setIsUpdated(false);\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(`Passwords do not match`);\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }, this), isUpdated && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: [\"Profile Updated Successfuly \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 86\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 31\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            required: true,\n            placeholder: \"Enter your full name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            required: true,\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm password\",\n            value: confirmPassword,\n            onChange: e => setComfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outline-primary\",\n          children: [\"Update \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 34\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 61\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        size: \"sm\",\n        variant: \"outline-primary\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIVERED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check\",\n                  style: {\n                    color: 'green'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 61\n                }, this), \" \", order.paidAt.substring(0, 10)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 58\n              }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check\",\n                  style: {\n                    color: 'green'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 65\n                }, this), \" \", order.deliveredAt.substring(0, 10), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 62\n              }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-sm\",\n                  variant: \"outline-primary\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileScreen, \"2lOY+owMbFBl+JNEO59mVxvB3es=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","Table","LinkContainer","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","listMyOrders","ProfileScreen","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setComfirmPassword","message","setMessage","isUpdated","setIsUpdated","dispatch","costumerOrderList","state","loading","loadingOrders","error","errorOrders","orders","userLogin","userInfo","userUpdateProfile","success","costumerOrders","userDetails","user","push","type","setTimeout","submitHandler","e","preventDefault","id","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","color","paidAt","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table, } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderAction'\nconst ProfileScreen = ({ history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setComfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n    const [isUpdated, setIsUpdated] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const costumerOrderList = useSelector((state) => state.costumerOrderList)\n    const { loading: loadingOrders, error: errorOrders, orders } = costumerOrderList\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const costumerOrders = useSelector((state) => state.userDetails)\n    const { loading, error, user } = costumerOrders\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.name || !user || success) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                if (loading === false) {\n                    setIsUpdated(true)\n                    setTimeout(() => {\n                        setIsUpdated(false)\n                    }, 4000)\n                }\n                setMessage(null)\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success, loading])\n    const submitHandler = (e) => {\n        setIsUpdated(false)\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage(`Passwords do not match`)\n        } else {\n            dispatch(updateUserProfile({\n                id: user._id,\n                name,\n                email,\n                password\n            }))\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error} </Message>}\n                {isUpdated && <Message variant='success'>Profile Updated Successfuly <i className=\"fas fa-check\"></i> </Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Full Name</Form.Label>\n                        <Form.Control type='name' required placeholder='Enter your full name' value={name} onChange={e => setName(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group><br />\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control type='email' required placeholder='Enter email' value={email} onChange={e => setEmail(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group><br />\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type='password' placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group><br />\n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={e => setComfirmPassword(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group><br />\n                    <Button type='submit' variant='outline-primary'>\n                        Update <i className=\"fas fa-user-edit\"></i>\n                    </Button>\n                </Form>\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger' >{errorOrders}</Message> : (\n                    <Table size='sm' variant='outline-primary' striped bordered hover responsive>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>PAID</th>\n                                <th>DELIVERED</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>{order.totalPrice}</td>\n                                    <td>{order.isPaid ? (<p><i className='fas fa-check' style={{ color: 'green' }}></i> {order.paidAt.substring(0, 10)}</p>) :\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                                    <td>{order.isDelivered ? <p><i className='fas fa-check' style={{ color: 'green' }}></i> {order.deliveredAt.substring(0, 10)} </p> :\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                                    <td><LinkContainer to={`/order/${order._id}`}>\n                                        <Button className='btn-sm' variant='outline-primary'>Details</Button>\n                                    </LinkContainer></td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row >\n    )\n}\n\nexport default ProfileScreen\n"]},"metadata":{},"sourceType":"module"}