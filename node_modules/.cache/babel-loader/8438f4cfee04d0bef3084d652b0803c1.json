{"ast":null,"code":"import { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useOnChange(value, callback) {\n  useIsomorphicLayoutEffect(function () {\n    if (isMotionValue(value)) return value.onChange(callback);\n  }, [callback]);\n}\n\nfunction useMultiOnChange(values, handler) {\n  useIsomorphicLayoutEffect(function () {\n    var subscriptions = values.map(function (value) {\n      return value.onChange(handler);\n    });\n    return function () {\n      return subscriptions.forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    };\n  });\n}\n\nexport { useMultiOnChange, useOnChange };","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/node_modules/framer-motion/dist/es/value/use-on-change.mjs"],"names":["isMotionValue","useIsomorphicLayoutEffect","useOnChange","value","callback","onChange","useMultiOnChange","values","handler","subscriptions","map","forEach","unsubscribe"],"mappings":"AAAA,SAASA,aAAT,QAA8B,6BAA9B;AACA,SAASC,yBAAT,QAA0C,oCAA1C;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAClCH,EAAAA,yBAAyB,CAAC,YAAY;AAClC,QAAID,aAAa,CAACG,KAAD,CAAjB,EACI,OAAOA,KAAK,CAACE,QAAN,CAAeD,QAAf,CAAP;AACP,GAHwB,EAGtB,CAACA,QAAD,CAHsB,CAAzB;AAIH;;AACD,SAASE,gBAAT,CAA0BC,MAA1B,EAAkCC,OAAlC,EAA2C;AACvCP,EAAAA,yBAAyB,CAAC,YAAY;AAClC,QAAIQ,aAAa,GAAGF,MAAM,CAACG,GAAP,CAAW,UAAUP,KAAV,EAAiB;AAAE,aAAOA,KAAK,CAACE,QAAN,CAAeG,OAAf,CAAP;AAAiC,KAA/D,CAApB;AACA,WAAO,YAAY;AAAE,aAAOC,aAAa,CAACE,OAAd,CAAsB,UAAUC,WAAV,EAAuB;AAAE,eAAOA,WAAW,EAAlB;AAAuB,OAAtE,CAAP;AAAiF,KAAtG;AACH,GAHwB,CAAzB;AAIH;;AAED,SAASN,gBAAT,EAA2BJ,WAA3B","sourcesContent":["import { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useOnChange(value, callback) {\n    useIsomorphicLayoutEffect(function () {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler) {\n    useIsomorphicLayoutEffect(function () {\n        var subscriptions = values.map(function (value) { return value.onChange(handler); });\n        return function () { return subscriptions.forEach(function (unsubscribe) { return unsubscribe(); }); };\n    });\n}\n\nexport { useMultiOnChange, useOnChange };\n"]},"metadata":{},"sourceType":"module"}