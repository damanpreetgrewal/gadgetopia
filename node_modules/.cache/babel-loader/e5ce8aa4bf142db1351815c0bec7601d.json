{"ast":null,"code":"import axios from 'axios';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport { CART_RESET, CART_RESET_SHIPPING_ADDRESS } from '../constants/cartConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  dispatch({\n    type: CART_RESET_SHIPPING_ADDRESS\n  });\n  dispatch({\n    type: CART_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/users/profile', user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/users', config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/Neon-Tech-main/frontend/src/actions/userActions.js"],"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAILS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","ORDER_LIST_MY_RESET","CART_RESET","CART_RESET_SHIPPING_ADDRESS","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,iBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,eAJJ,EAKIC,kBALJ,EAMIC,kBANJ,EAOIC,WAPJ,EAQIC,kBARJ,EASIC,qBATJ,EAUIC,qBAVJ,EAWIC,wBAXJ,EAYIC,2BAZJ,EAaIC,2BAbJ,EAcIC,kBAdJ,EAeIC,iBAfJ,EAgBIC,iBAhBJ,EAiBIC,cAjBJ,EAkBIC,eAlBJ,EAmBIC,mBAnBJ,EAoBIC,mBApBJ,EAqBIC,gBArBJ,EAsBIC,mBAtBJ,EAuBIC,mBAvBJ,EAwBIC,gBAxBJ,QAyBO,4BAzBP;AA0BA,SAASC,mBAAT,QAAoC,6BAApC;AACA,SAASC,UAAT,EAAqBC,2BAArB,QAAwD,4BAAxD;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE3B;AADD,KAAD,CAAR;AAGA,UAAM4B,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACoC,IAAN,CAAW,kBAAX,EAA+B;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA/B,EAAoDG,MAApD,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE1B,kBADD;AAEL+B,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACH,GAhBD,CAgBE,OAAOO,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE5B,eADD;AAELiC,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CAzBM;AA2BP,OAAO,MAAMC,MAAM,GAAG,MAAOd,QAAD,IAAc;AACtCO,EAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAf,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEzB;AADD,GAAD,CAAR;AAGAwB,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAElB;AADD,GAAD,CAAR;AAGAiB,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEP;AADD,GAAD,CAAR;AAGAM,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEd;AADD,GAAD,CAAR;AAGAa,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEL;AADD,GAAD,CAAR;AAGAI,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEN;AADD,GAAD,CAAR;AAGH,CApBM;AAuBP,OAAO,MAAMqB,QAAQ,GAAG,CAACC,IAAD,EAAOnB,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AACnE,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEvB;AADD,KAAD,CAAR;AAGA,UAAMwB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACoC,IAAN,CAAW,YAAX,EAAyB;AAAEY,MAAAA,IAAF;AAAQnB,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAzB,EAAoDG,MAApD,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEtB,qBADD;AAEL2B,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE1B,kBADD;AAEL+B,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACH,GApBD,CAoBE,OAAOO,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAExB,kBADD;AAEL6B,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CA7BM;AAgCP,OAAO,MAAMK,cAAc,GAAIC,EAAD,IAAQ,OAAOnB,QAAP,EAAiBoB,QAAjB,KAA8B;AAChE,MAAI;AAEApB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE9B;AADD,KAAD,CAAR;AAGA,UAAM;AAAEkD,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA+BF,QAAQ,EAA7C;AAEA,UAAMlB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELoB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AAFnC;AADE,KAAf;AAMA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACwD,GAAN,CAAW,cAAaN,EAAG,EAA3B,EAA8BjB,MAA9B,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE7B,oBADD;AAELkC,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAlBD,CAkBE,OAAOO,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE/B,iBADD;AAELoC,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CA3BM;AA6BP,OAAO,MAAMa,iBAAiB,GAAIC,IAAD,IAAU,OAAO3B,QAAP,EAAiBoB,QAAjB,KAA8B;AACrE,MAAI;AACApB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEpB;AADD,KAAD,CAAR;AAGA,UAAM;AAAEwC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA+BF,QAAQ,EAA7C;AAEA,UAAMlB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELoB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AAFnC;AADE,KAAf;AAMA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAAC2D,GAAN,CAAU,oBAAV,EAAgCD,IAAhC,EAAsCzB,MAAtC,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEnB,2BADD;AAELwB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE1B,kBADD;AAEL+B,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAtBD,CAsBE,OAAOO,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAErB,wBADD;AAEL0B,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CA/BM;AAkCP,OAAO,MAAMgB,SAAS,GAAG,MAAM,OAAO7B,QAAP,EAAiBoB,QAAjB,KAA8B;AACzD,MAAI;AACApB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEjB;AADD,KAAD,CAAR;AAGA,UAAM;AAAEqC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA+BF,QAAQ,EAA7C;AAEA,UAAMlB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACLoB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AADnC;AADE,KAAf;AAKA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACwD,GAAN,CAAU,YAAV,EAAwBvB,MAAxB,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEhB,iBADD;AAELqB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAjBD,CAiBE,OAAOO,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEf,cADD;AAELoB,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CA1BM;AA4BP,OAAO,MAAMiB,UAAU,GAAIX,EAAD,IAAQ,OAAOnB,QAAP,EAAiBoB,QAAjB,KAA8B;AAC5D,MAAI;AACApB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGA,UAAM;AAAEiC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA+BF,QAAQ,EAA7C;AAEA,UAAMlB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACLoB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AADnC;AADE,KAAf;AAKA,UAAMvD,KAAK,CAAC8D,MAAN,CAAc,cAAaZ,EAAG,EAA9B,EAAiCjB,MAAjC,CAAN;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGH,GAfD,CAeE,OAAOsB,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEX,gBADD;AAELgB,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CAxBM;AA0BP,OAAO,MAAMmB,UAAU,GAAIL,IAAD,IAAU,OAAO3B,QAAP,EAAiBoB,QAAjB,KAA8B;AAC9D,MAAI;AACApB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGA,UAAM;AAAE8B,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA+BF,QAAQ,EAA7C;AAEA,UAAMlB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELoB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AAFnC;AADE,KAAf;AAMA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAAC2D,GAAN,CAAW,cAAaD,IAAI,CAACM,GAAI,EAAjC,EAAoCN,IAApC,EAA0CzB,MAA1C,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAGAQ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE7B,oBADD;AACuBkC,MAAAA,OAAO,EAAEF;AADhC,KAAD,CAAR;AAGH,GAnBD,CAmBE,OAAOO,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,gBADD;AAELa,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CA5BM","sourcesContent":["import axios from 'axios'\nimport {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_DETAILS_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\nimport { CART_RESET, CART_RESET_SHIPPING_ADDRESS } from '../constants/cartConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers: {\n                'content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n    dispatch({\n        type: USER_DETAILS_RESET\n    })\n    dispatch({\n        type: ORDER_LIST_MY_RESET\n    })\n    dispatch({\n        type: USER_LIST_RESET\n    })\n    dispatch({\n        type: CART_RESET_SHIPPING_ADDRESS\n    })\n    dispatch({\n        type: CART_RESET\n    })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        const config = {\n            headers: {\n                'content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(`/api/users/${id}`, config)\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put('/api/users/profile', user, config)\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data,\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get('/api/users', config)\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        await axios.delete(`/api/users/${id}`, config)\n        dispatch({\n            type: USER_DELETE_SUCCESS\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n        dispatch({\n            type: USER_UPDATE_SUCCESS\n        })\n        dispatch({\n            type: USER_DETAILS_SUCCESS, payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}