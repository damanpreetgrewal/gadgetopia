{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daman\\\\Desktop\\\\Final Project\\\\gadgetopia\\\\frontend\\\\src\\\\components\\\\helpers\\\\AnimationRevealPage.js\",\n    _s = $RefreshSig$();\n\nimport _styled from \"styled-components\";\nimport React from \"react\";\n\n/* framer-motion and useInView here are used to animate the sections in when we reach them in the viewport\n */\nimport { motion } from \"framer-motion\";\nimport useInView from \"@owaiswiz/use-in-view\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StyledDiv = _styled.div({\n  \"fontFamily\": \"Inter, system-ui\",\n  \"minHeight\": \"100vh\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(36, 62, 99, var(--tw-text-opacity))\",\n  \"padding\": \"2rem\",\n  \"overflow\": \"hidden\"\n});\n\n_c = StyledDiv;\n\nfunction AnimationReveal({\n  disabled,\n  children\n}) {\n  if (disabled) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  }\n\n  if (!Array.isArray(children)) children = [children];\n  const directions = [\"left\", \"right\"];\n  const childrenWithAnimation = children.map((child, i) => {\n    return /*#__PURE__*/_jsxDEV(AnimatedSlideInComponent, {\n      direction: directions[i % directions.length],\n      children: child\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: childrenWithAnimation\n  }, void 0, false);\n}\n\n_c2 = AnimationReveal;\n\nfunction AnimatedSlideInComponent({\n  direction = \"left\",\n  offset = 30,\n  children\n}) {\n  _s();\n\n  const [ref, inView] = useInView(30);\n  const x = {\n    target: \"0%\"\n  };\n  if (direction === \"left\") x.initial = \"-150%\";else x.initial = \"150%\";\n  return /*#__PURE__*/_jsxDEV(motion.section, {\n    initial: {\n      x: x.initial\n    },\n    animate: {\n      x: inView && x.target,\n      transitionEnd: {\n        x: inView && 0\n      }\n    },\n    transition: {\n      type: \"spring\",\n      damping: 19\n    },\n    ref: ref,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AnimatedSlideInComponent, \"GpcLnEGLCRT/LcXgsVwPMCbjDPg=\", false, function () {\n  return [useInView];\n});\n\n_c3 = AnimatedSlideInComponent;\nexport default (props => /*#__PURE__*/_jsxDEV(StyledDiv, {\n  className: \"App\",\n  children: /*#__PURE__*/_jsxDEV(AnimationReveal, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledDiv\");\n$RefreshReg$(_c2, \"AnimationReveal\");\n$RefreshReg$(_c3, \"AnimatedSlideInComponent\");","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/src/components/helpers/AnimationRevealPage.js"],"names":["React","motion","useInView","StyledDiv","tw","div","AnimationReveal","disabled","children","Array","isArray","directions","childrenWithAnimation","map","child","i","length","AnimatedSlideInComponent","direction","offset","ref","inView","x","target","initial","transitionEnd","type","damping","props"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA;AACA;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;;AAEA,MAAMC,SAAS,GAAGC,OAAE,CAACC,GAAH,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAN,CAAlB;;KAAMF,S;;AACN,SAASG,eAAT,CAAyB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAzB,EAAiD;AAC/C,MAAID,QAAJ,EAAc;AACZ,wBAAO;AAAA,gBAAGC;AAAH,qBAAP;AACD;;AAED,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAL,EAA8BA,QAAQ,GAAG,CAACA,QAAD,CAAX;AAE9B,QAAMG,UAAU,GAAG,CAAC,MAAD,EAAS,OAAT,CAAnB;AACA,QAAMC,qBAAqB,GAAGJ,QAAQ,CAACK,GAAT,CAAa,CAACC,KAAD,EAAQC,CAAR,KAAc;AACvD,wBACE,QAAC,wBAAD;AAAkC,MAAA,SAAS,EAAEJ,UAAU,CAACI,CAAC,GAAGJ,UAAU,CAACK,MAAhB,CAAvD;AAAA,gBACGF;AADH,OAA+BC,CAA/B;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAN6B,CAA9B;AAOA,sBAAO;AAAA,cAAGH;AAAH,mBAAP;AACD;;MAhBQN,e;;AAkBT,SAASW,wBAAT,CAAkC;AAAEC,EAAAA,SAAS,GAAG,MAAd;AAAsBC,EAAAA,MAAM,GAAG,EAA/B;AAAmCX,EAAAA;AAAnC,CAAlC,EAAiF;AAAA;;AAC/E,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBnB,SAAS,CAAC,EAAD,CAA/B;AAEA,QAAMoB,CAAC,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAV;AAEA,MAAIL,SAAS,KAAK,MAAlB,EAA0BI,CAAC,CAACE,OAAF,GAAY,OAAZ,CAA1B,KACKF,CAAC,CAACE,OAAF,GAAY,MAAZ;AAEL,sBACE,QAAC,MAAD,CAAQ,OAAR;AACE,IAAA,OAAO,EAAE;AAAEF,MAAAA,CAAC,EAAEA,CAAC,CAACE;AAAP,KADX;AAEE,IAAA,OAAO,EAAE;AACPF,MAAAA,CAAC,EAAED,MAAM,IAAIC,CAAC,CAACC,MADR;AAEPE,MAAAA,aAAa,EAAC;AACZH,QAAAA,CAAC,EAAED,MAAM,IAAI;AADD;AAFP,KAFX;AAQE,IAAA,UAAU,EAAE;AAAEK,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KARd;AASE,IAAA,GAAG,EAAEP,GATP;AAAA,cAWGZ;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvBQS,wB;UACef,S;;;MADfe,wB;AAyBT,gBAAeW,KAAK,iBAClB,QAAC,SAAD;AAAW,EAAA,SAAS,EAAC,KAArB;AAAA,yBACE,QAAC,eAAD,OAAqBA;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["import React from \"react\";\nimport tw from \"twin.macro\";\n\n/* framer-motion and useInView here are used to animate the sections in when we reach them in the viewport\n */\nimport { motion } from \"framer-motion\";\nimport useInView from \"@owaiswiz/use-in-view\";\n\nconst StyledDiv = tw.div`font-display min-h-screen text-secondary-500 p-8 overflow-hidden`;\nfunction AnimationReveal({ disabled, children }) {\n  if (disabled) {\n    return <>{children}</>;\n  }\n\n  if (!Array.isArray(children)) children = [children];\n\n  const directions = [\"left\", \"right\"];\n  const childrenWithAnimation = children.map((child, i) => {\n    return (\n      <AnimatedSlideInComponent key={i} direction={directions[i % directions.length]}>\n        {child}\n      </AnimatedSlideInComponent>\n    );\n  });\n  return <>{childrenWithAnimation}</>;\n}\n\nfunction AnimatedSlideInComponent({ direction = \"left\", offset = 30, children }) {\n  const [ref, inView] = useInView(30);\n\n  const x = { target: \"0%\" };\n\n  if (direction === \"left\") x.initial = \"-150%\";\n  else x.initial = \"150%\";\n\n  return (\n    <motion.section\n      initial={{ x: x.initial }}\n      animate={{ \n        x: inView && x.target,\n        transitionEnd:{\n          x: inView && 0\n        }\n      }}\n      transition={{ type: \"spring\", damping: 19 }}\n      ref={ref}\n    >\n      {children}\n    </motion.section>\n  );\n}\n\nexport default props => (\n  <StyledDiv className=\"App\">\n    <AnimationReveal {...props} />\n  </StyledDiv>\n);\n"]},"metadata":{},"sourceType":"module"}