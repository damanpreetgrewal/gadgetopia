{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daman\\\\Desktop\\\\Final Project\\\\gadgetopia\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, Table, Container } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { listMyOrders } from \"../actions/orderAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = ({\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setComfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const dispatch = useDispatch();\n  const costumerOrderList = useSelector(state => state.costumerOrderList);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = costumerOrderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const costumerOrders = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = costumerOrders;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name || !user || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n\n        if (loading === false) {\n          setIsUpdated(true);\n          setTimeout(() => {\n            setIsUpdated(false);\n          }, 4000);\n        }\n\n        setMessage(null);\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success, loading]);\n\n  const submitHandler = e => {\n    setIsUpdated(false);\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(`Passwords do not match`);\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: '2rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: [error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this), isUpdated && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"success\",\n          children: [\"Profile Updated Successfuly \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 41\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              required: true,\n              placeholder: \"Enter your full name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              required: true,\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              value: confirmPassword,\n              onChange: e => setComfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outline-primary\",\n            children: [\"Update \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user-edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: errorOrders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          size: \"sm\",\n          variant: \"outline-primary\",\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TOTAL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"PAID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DELIVERED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.createdAt.substring(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.totalPrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.isPaid ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-check\",\n                    style: {\n                      color: \"green\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 25\n                  }, this), \" \", order.paidAt.substring(0, 10)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.isDelivered ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-check\",\n                    style: {\n                      color: \"green\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 25\n                  }, this), \" \", order.deliveredAt.substring(0, 10), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                  to: `/order/${order._id}`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-sm\",\n                    variant: \"outline-primary\",\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, order._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileScreen, \"RiBXmFloDEEVS+4ExivVOBFvChA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","Table","Container","LinkContainer","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","listMyOrders","ProfileScreen","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setComfirmPassword","message","setMessage","isUpdated","setIsUpdated","dispatch","costumerOrderList","state","loading","loadingOrders","error","errorOrders","orders","userLogin","userInfo","userUpdateProfile","success","costumerOrders","userDetails","user","push","type","setTimeout","submitHandler","e","preventDefault","id","_id","marginTop","target","value","map","order","createdAt","substring","totalPrice","isPaid","color","paidAt","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, Table,Container } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { listMyOrders } from \"../actions/orderAction\";\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setComfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isUpdated, setIsUpdated] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const costumerOrderList = useSelector((state) => state.costumerOrderList);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders,\n  } = costumerOrderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const costumerOrders = useSelector((state) => state.userDetails);\n  const { loading, error, user } = costumerOrders;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name || !user || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        if (loading === false) {\n          setIsUpdated(true);\n          setTimeout(() => {\n            setIsUpdated(false);\n          }, 4000);\n        }\n        setMessage(null);\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success, loading]);\n  const submitHandler = (e) => {\n    setIsUpdated(false);\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(`Passwords do not match`);\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user._id,\n          name,\n          email,\n          password,\n        })\n      );\n    }\n  };\n\n  return (\n    <Container style={{marginTop: '2rem'}}>\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error} </Message>}\n        {isUpdated && (\n          <Message variant=\"success\">\n            Profile Updated Successfuly <i className=\"fas fa-check\"></i>{\" \"}\n          </Message>\n        )}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Full Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              required\n              placeholder=\"Enter your full name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <br />\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              required\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <br />\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <br />\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmPassword}\n              onChange={(e) => setComfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <br />\n          <Button type=\"submit\" variant=\"outline-primary\">\n            Update <i className=\"fas fa-user-edit\"></i>\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table\n            size=\"sm\"\n            variant=\"outline-primary\"\n            striped\n            bordered\n            hover\n            responsive\n          >\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      <p>\n                        <i\n                          className=\"fas fa-check\"\n                          style={{ color: \"green\" }}\n                        ></i>{\" \"}\n                        {order.paidAt.substring(0, 10)}\n                      </p>\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      <p>\n                        <i\n                          className=\"fas fa-check\"\n                          style={{ color: \"green\" }}\n                        ></i>{\" \"}\n                        {order.deliveredAt.substring(0, 10)}{\" \"}\n                      </p>\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\" variant=\"outline-primary\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n    </Container>\n  );\n};\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}