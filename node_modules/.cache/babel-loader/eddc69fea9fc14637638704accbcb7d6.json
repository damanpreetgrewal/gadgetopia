{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daman\\\\Desktop\\\\Final Project\\\\Neon-Tech-main\\\\frontend\\\\src\\\\screens\\\\EditProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProductsDetails, updateProduct } from '../actions/productActions';\nimport { Link } from 'react-router-dom';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditProductScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [rating, setRating] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [uploadError, setUploadError] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductsDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n        setRating(product.rating);\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n    console.log(uploading);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      console.log(uploading);\n      setUploading(false);\n      setUploadError(false);\n    } catch (error) {\n      setUploadError(true);\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock,\n      rating\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-outline-dark my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-hand-point-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 81\n      }, this), \" Go Back\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), successUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: [\"Product Updated successfuly\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 89\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 35\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [errorUpdate, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 73\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [error, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"Enter your full name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Price \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Image \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter image url\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: uploading === false && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-exclamation-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 110\n              }, this), \" Only jpg/jpeg/png Files \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-exclamation-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 180\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 86\n            }, this),\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 43\n          }, this), uploadError && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: [\"Sorry \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-sad-tear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 77\n            }, this), \" , the file has to be a jpg/jpeg/png \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-bomb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 149\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Brand \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" countInStock \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Category \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            required: true,\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            required: true,\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: [\"Update  \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditProductScreen, \"aCMtXe6VrXYrTLrRwryNSVB0Sr8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditProductScreen;\nexport default EditProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductScreen\");","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/Neon-Tech-main/frontend/src/screens/EditProductScreen.js"],"names":["React","useState","useEffect","axios","Form","Button","useDispatch","useSelector","FormContainer","Message","Loader","listProductsDetails","updateProduct","Link","PRODUCT_UPDATE_RESET","EditProductScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","rating","setRating","uploading","setUploading","uploadError","setUploadError","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","uploadFileHandler","e","file","target","files","formData","FormData","append","console","log","config","headers","data","post","submitHandler","preventDefault","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductsDetails, updateProduct } from '../actions/productActions'\nimport { Link } from 'react-router-dom'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nconst EditProductScreen = ({ match, history }) => {\n    const productId = match.params.id\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [rating, setRating] = useState('')\n    const [uploading, setUploading] = useState(false)\n    const [uploadError, setUploadError] = useState(false)\n\n\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({\n                type: PRODUCT_UPDATE_RESET\n            })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== productId) {\n                dispatch(listProductsDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n                setRating(product.rating)\n            }\n        }\n    }, [product, dispatch, productId, history, successUpdate])\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n        console.log(uploading);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            console.log(uploading);\n            setUploading(false)\n            setUploadError(false)\n        } catch (error) {\n            setUploadError(true)\n            console.log(error);\n            setUploading(false)\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            description,\n            countInStock,\n            rating\n        }))\n    }\n    return (\n        <>\n            <Link to='/admin/productlist' className='btn btn-outline-dark my-3'><i className=\"far fa-hand-point-left\"></i> Go Back</Link>\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {successUpdate && <Message variant='success'>Product Updated successfuly<i className='fas fa-check'></i></Message>}\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate} <i className=\"fas fa-exclamation-triangle\"></i> </Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error} <i className=\"fas fa-exclamation-triangle\"></i></Message> : (\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label> Product Name</Form.Label>\n                            <Form.Control required type='name' placeholder='Enter your full name' value={name} onChange={e => setName(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group><br />\n\n                        <Form.Group controlId='price'>\n                            <Form.Label> Price </Form.Label>\n                            <Form.Control required type='number' placeholder='Enter price' value={price} onChange={e => setPrice(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group><br />\n\n                        <Form.Group controlId='image'>\n                            <Form.Label> Image </Form.Label>\n                            <Form.Control required type='text' placeholder='Enter image url' value={image} onChange={e => setImage(e.target.value)}>\n                            </Form.Control ><br />\n                            <Form.File id='image-file' label={uploading === false && <Message variant='info'><i className=\"fas fa-exclamation-circle\"></i> Only jpg/jpeg/png Files <i className=\"fas fa-exclamation-circle\"></i></Message>} custom onChange={uploadFileHandler}></Form.File>\n                            {uploading && <Loader />}\n                            {uploadError && <Message variant='danger'>Sorry <i className=\"far fa-sad-tear\"></i> , the file has to be a jpg/jpeg/png <i className=\"fas fa-bomb\"></i></Message>}\n                        </Form.Group><br />\n\n                        <Form.Group controlId='brand'>\n                            <Form.Label> Brand </Form.Label>\n                            <Form.Control required type='text' placeholder='Enter brand' value={brand} onChange={e => setBrand(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group><br />\n\n                        <Form.Group controlId='countInStock'>\n                            <Form.Label> countInStock </Form.Label>\n                            <Form.Control required type='number' placeholder='Enter countInStock' value={countInStock} onChange={e => setCountInStock(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group><br />\n\n                        <Form.Group controlId='category'>\n                            <Form.Label> Category </Form.Label>\n                            <Form.Control type='text' required placeholder='Enter category' value={category} onChange={e => setCategory(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group><br />\n\n                        <Form.Group controlId='description'>\n                            <Form.Label> Description </Form.Label>\n                            <Form.Control type='text' required placeholder='Enter description' value={description} onChange={e => setDescription(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group><br />\n\n\n                        <Button type='submit' variant='primary'>\n                            Update  <i className=\"fas fa-user-edit\"></i>\n                        </Button>\n                    </Form>\n                )}\n\n            </FormContainer>\n        </>\n\n    )\n}\n\nexport default EditProductScreen\n"]},"metadata":{},"sourceType":"module"}