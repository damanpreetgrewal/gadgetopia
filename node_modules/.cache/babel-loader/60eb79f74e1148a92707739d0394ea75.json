{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar tslib = require('tslib');\n\nvar index = require('../resize/index.cjs.js');\n\nvar info = require('./info.cjs.js');\n\nvar onScrollHandler = require('./on-scroll-handler.cjs.js');\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\n\nconst getEventTarget = element => element === document.documentElement ? window : element;\n\nfunction scroll(onScroll, _a = {}) {\n  var {\n    container = document.documentElement\n  } = _a,\n      options = tslib.__rest(_a, [\"container\"]);\n\n  let containerHandlers = onScrollHandlers.get(container);\n  /**\n   * Get the onScroll handlers for this container.\n   * If one isn't found, create a new one.\n   */\n\n  if (!containerHandlers) {\n    containerHandlers = new Set();\n    onScrollHandlers.set(container, containerHandlers);\n  }\n  /**\n   * Create a new onScroll handler for the provided callback.\n   */\n\n\n  const info$1 = info.createScrollInfo();\n  const containerHandler = onScrollHandler.createOnScrollHandler(container, onScroll, info$1, options);\n  containerHandlers.add(containerHandler);\n  /**\n   * Check if there's a scroll event listener for this container.\n   * If not, create one.\n   */\n\n  if (!scrollListeners.has(container)) {\n    const listener = () => {\n      const time = performance.now();\n\n      for (const handler of containerHandlers) handler.measure();\n\n      for (const handler of containerHandlers) handler.update(time);\n\n      for (const handler of containerHandlers) handler.notify();\n    };\n\n    scrollListeners.set(container, listener);\n    const target = getEventTarget(container);\n    window.addEventListener(\"resize\", listener, {\n      passive: true\n    });\n\n    if (container !== document.documentElement) {\n      resizeListeners.set(container, index.resize(container, listener));\n    }\n\n    target.addEventListener(\"scroll\", listener, {\n      passive: true\n    });\n  }\n\n  const listener = scrollListeners.get(container);\n  const onLoadProcesss = requestAnimationFrame(listener);\n  return () => {\n    var _a;\n\n    if (typeof onScroll !== \"function\") onScroll.stop();\n    cancelAnimationFrame(onLoadProcesss);\n    /**\n     * Check if we even have any handlers for this container.\n     */\n\n    const containerHandlers = onScrollHandlers.get(container);\n    if (!containerHandlers) return;\n    containerHandlers.delete(containerHandler);\n    if (containerHandlers.size) return;\n    /**\n     * If no more handlers, remove the scroll listener too.\n     */\n\n    const listener = scrollListeners.get(container);\n    scrollListeners.delete(container);\n\n    if (listener) {\n      getEventTarget(container).removeEventListener(\"scroll\", listener);\n      (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n      window.removeEventListener(\"resize\", listener);\n    }\n  };\n}\n\nexports.scroll = scroll;","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/node_modules/@motionone/dom/dist/gestures/scroll/index.cjs.js"],"names":["Object","defineProperty","exports","value","tslib","require","index","info","onScrollHandler","scrollListeners","WeakMap","resizeListeners","onScrollHandlers","getEventTarget","element","document","documentElement","window","scroll","onScroll","_a","container","options","__rest","containerHandlers","get","Set","set","info$1","createScrollInfo","containerHandler","createOnScrollHandler","add","has","listener","time","performance","now","handler","measure","update","notify","target","addEventListener","passive","resize","onLoadProcesss","requestAnimationFrame","stop","cancelAnimationFrame","delete","size","removeEventListener"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar index = require('../resize/index.cjs.js');\nvar info = require('./info.cjs.js');\nvar onScrollHandler = require('./on-scroll-handler.cjs.js');\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scroll(onScroll, _a = {}) {\n    var { container = document.documentElement } = _a, options = tslib.__rest(_a, [\"container\"]);\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info$1 = info.createScrollInfo();\n    const containerHandler = onScrollHandler.createOnScrollHandler(container, onScroll, info$1, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const listener = () => {\n            const time = performance.now();\n            for (const handler of containerHandlers)\n                handler.measure();\n            for (const handler of containerHandlers)\n                handler.update(time);\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, index.resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    const onLoadProcesss = requestAnimationFrame(listener);\n    return () => {\n        var _a;\n        if (typeof onScroll !== \"function\")\n            onScroll.stop();\n        cancelAnimationFrame(onLoadProcesss);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const containerHandlers = onScrollHandlers.get(container);\n        if (!containerHandlers)\n            return;\n        containerHandlers.delete(containerHandler);\n        if (containerHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const listener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (listener) {\n            getEventTarget(container).removeEventListener(\"scroll\", listener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", listener);\n        }\n    };\n}\n\nexports.scroll = scroll;\n"]},"metadata":{},"sourceType":"script"}