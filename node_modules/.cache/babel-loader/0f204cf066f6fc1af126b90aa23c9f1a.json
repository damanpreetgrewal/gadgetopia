{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar generators = require('@motionone/generators');\n\nfunction createGeneratorEasing(createGenerator) {\n  const keyframesCache = new WeakMap();\n  return (options = {}) => {\n    const generatorCache = new Map();\n\n    const getGenerator = (from = 0, to = 100, velocity = 0, isScale = false) => {\n      const key = `${from}-${to}-${velocity}-${isScale}`;\n\n      if (!generatorCache.has(key)) {\n        generatorCache.set(key, createGenerator(Object.assign({\n          from,\n          to,\n          velocity,\n          restSpeed: isScale ? 0.05 : 2,\n          restDistance: isScale ? 0.01 : 0.5\n        }, options)));\n      }\n\n      return generatorCache.get(key);\n    };\n\n    const getKeyframes = generator => {\n      if (!keyframesCache.has(generator)) {\n        keyframesCache.set(generator, generators.pregenerateKeyframes(generator));\n      }\n\n      return keyframesCache.get(generator);\n    };\n\n    return {\n      createAnimation: (keyframes, getOrigin, canUseGenerator, name, motionValue) => {\n        var _a, _b;\n\n        let settings;\n        const numKeyframes = keyframes.length;\n        let shouldUseGenerator = canUseGenerator && numKeyframes <= 2 && keyframes.every(isNumberOrNull);\n\n        if (shouldUseGenerator) {\n          const target = keyframes[numKeyframes - 1];\n          const unresolvedOrigin = numKeyframes === 1 ? null : keyframes[0];\n          let velocity = 0;\n          let origin = 0;\n          const prevGenerator = motionValue === null || motionValue === void 0 ? void 0 : motionValue.generator;\n\n          if (prevGenerator) {\n            /**\n             * If we have a generator for this value we can use it to resolve\n             * the animations's current value and velocity.\n             */\n            const {\n              animation,\n              generatorStartTime\n            } = motionValue;\n            const startTime = (animation === null || animation === void 0 ? void 0 : animation.startTime) || generatorStartTime || 0;\n            const currentTime = (animation === null || animation === void 0 ? void 0 : animation.currentTime) || performance.now() - startTime;\n            const prevGeneratorCurrent = prevGenerator(currentTime).current;\n            origin = (_a = unresolvedOrigin) !== null && _a !== void 0 ? _a : prevGeneratorCurrent;\n\n            if (numKeyframes === 1 || numKeyframes === 2 && keyframes[0] === null) {\n              velocity = generators.calcGeneratorVelocity(t => prevGenerator(t).current, currentTime, prevGeneratorCurrent);\n            }\n          } else {\n            origin = (_b = unresolvedOrigin) !== null && _b !== void 0 ? _b : parseFloat(getOrigin());\n          }\n\n          const generator = getGenerator(origin, target, velocity, name === null || name === void 0 ? void 0 : name.includes(\"scale\"));\n          const keyframesMetadata = getKeyframes(generator);\n          settings = Object.assign(Object.assign({}, keyframesMetadata), {\n            easing: \"linear\"\n          }); // TODO Add test for this\n\n          if (motionValue) {\n            motionValue.generator = generator;\n            motionValue.generatorStartTime = performance.now();\n          }\n        } else {\n          const keyframesMetadata = getKeyframes(getGenerator(0, 100));\n          settings = {\n            easing: \"ease\",\n            duration: keyframesMetadata.overshootDuration\n          };\n        }\n\n        return settings;\n      }\n    };\n  };\n}\n\nconst isNumberOrNull = value => typeof value !== \"string\";\n\nexports.createGeneratorEasing = createGeneratorEasing;","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/node_modules/@motionone/dom/dist/easing/create-generator-easing.cjs.js"],"names":["Object","defineProperty","exports","value","generators","require","createGeneratorEasing","createGenerator","keyframesCache","WeakMap","options","generatorCache","Map","getGenerator","from","to","velocity","isScale","key","has","set","assign","restSpeed","restDistance","get","getKeyframes","generator","pregenerateKeyframes","createAnimation","keyframes","getOrigin","canUseGenerator","name","motionValue","_a","_b","settings","numKeyframes","length","shouldUseGenerator","every","isNumberOrNull","target","unresolvedOrigin","origin","prevGenerator","animation","generatorStartTime","startTime","currentTime","performance","now","prevGeneratorCurrent","current","calcGeneratorVelocity","t","parseFloat","includes","keyframesMetadata","easing","duration","overshootDuration"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,uBAAD,CAAxB;;AAEA,SAASC,qBAAT,CAA+BC,eAA/B,EAAgD;AAC5C,QAAMC,cAAc,GAAG,IAAIC,OAAJ,EAAvB;AACA,SAAO,CAACC,OAAO,GAAG,EAAX,KAAkB;AACrB,UAAMC,cAAc,GAAG,IAAIC,GAAJ,EAAvB;;AACA,UAAMC,YAAY,GAAG,CAACC,IAAI,GAAG,CAAR,EAAWC,EAAE,GAAG,GAAhB,EAAqBC,QAAQ,GAAG,CAAhC,EAAmCC,OAAO,GAAG,KAA7C,KAAuD;AACxE,YAAMC,GAAG,GAAI,GAAEJ,IAAK,IAAGC,EAAG,IAAGC,QAAS,IAAGC,OAAQ,EAAjD;;AACA,UAAI,CAACN,cAAc,CAACQ,GAAf,CAAmBD,GAAnB,CAAL,EAA8B;AAC1BP,QAAAA,cAAc,CAACS,GAAf,CAAmBF,GAAnB,EAAwBX,eAAe,CAACP,MAAM,CAACqB,MAAP,CAAc;AAAEP,UAAAA,IAAF;AAClDC,UAAAA,EADkD;AAElDC,UAAAA,QAFkD;AAExCM,UAAAA,SAAS,EAAEL,OAAO,GAAG,IAAH,GAAU,CAFY;AAETM,UAAAA,YAAY,EAAEN,OAAO,GAAG,IAAH,GAAU;AAFtB,SAAd,EAE2CP,OAF3C,CAAD,CAAvC;AAGH;;AACD,aAAOC,cAAc,CAACa,GAAf,CAAmBN,GAAnB,CAAP;AACH,KARD;;AASA,UAAMO,YAAY,GAAIC,SAAD,IAAe;AAChC,UAAI,CAAClB,cAAc,CAACW,GAAf,CAAmBO,SAAnB,CAAL,EAAoC;AAChClB,QAAAA,cAAc,CAACY,GAAf,CAAmBM,SAAnB,EAA8BtB,UAAU,CAACuB,oBAAX,CAAgCD,SAAhC,CAA9B;AACH;;AACD,aAAOlB,cAAc,CAACgB,GAAf,CAAmBE,SAAnB,CAAP;AACH,KALD;;AAMA,WAAO;AACHE,MAAAA,eAAe,EAAE,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,eAAvB,EAAwCC,IAAxC,EAA8CC,WAA9C,KAA8D;AAC3E,YAAIC,EAAJ,EAAQC,EAAR;;AACA,YAAIC,QAAJ;AACA,cAAMC,YAAY,GAAGR,SAAS,CAACS,MAA/B;AACA,YAAIC,kBAAkB,GAAGR,eAAe,IACpCM,YAAY,IAAI,CADK,IAErBR,SAAS,CAACW,KAAV,CAAgBC,cAAhB,CAFJ;;AAGA,YAAIF,kBAAJ,EAAwB;AACpB,gBAAMG,MAAM,GAAGb,SAAS,CAACQ,YAAY,GAAG,CAAhB,CAAxB;AACA,gBAAMM,gBAAgB,GAAGN,YAAY,KAAK,CAAjB,GAAqB,IAArB,GAA4BR,SAAS,CAAC,CAAD,CAA9D;AACA,cAAIb,QAAQ,GAAG,CAAf;AACA,cAAI4B,MAAM,GAAG,CAAb;AACA,gBAAMC,aAAa,GAAGZ,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACP,SAA5F;;AACA,cAAImB,aAAJ,EAAmB;AACf;AACxB;AACA;AACA;AACwB,kBAAM;AAAEC,cAAAA,SAAF;AAAaC,cAAAA;AAAb,gBAAoCd,WAA1C;AACA,kBAAMe,SAAS,GAAG,CAACF,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACE,SAAjE,KAA+ED,kBAA/E,IAAqG,CAAvH;AACA,kBAAME,WAAW,GAAG,CAACH,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACG,WAAjE,KAAiFC,WAAW,CAACC,GAAZ,KAAoBH,SAAzH;AACA,kBAAMI,oBAAoB,GAAGP,aAAa,CAACI,WAAD,CAAb,CAA2BI,OAAxD;AACAT,YAAAA,MAAM,GAAG,CAACV,EAAE,GAAGS,gBAAN,MAA4B,IAA5B,IAAoCT,EAAE,KAAK,KAAK,CAAhD,GAAoDA,EAApD,GAAyDkB,oBAAlE;;AACA,gBAAIf,YAAY,KAAK,CAAjB,IACCA,YAAY,KAAK,CAAjB,IAAsBR,SAAS,CAAC,CAAD,CAAT,KAAiB,IAD5C,EACmD;AAC/Cb,cAAAA,QAAQ,GAAGZ,UAAU,CAACkD,qBAAX,CAAkCC,CAAD,IAAOV,aAAa,CAACU,CAAD,CAAb,CAAiBF,OAAzD,EAAkEJ,WAAlE,EAA+EG,oBAA/E,CAAX;AACH;AACJ,WAdD,MAeK;AACDR,YAAAA,MAAM,GAAG,CAACT,EAAE,GAAGQ,gBAAN,MAA4B,IAA5B,IAAoCR,EAAE,KAAK,KAAK,CAAhD,GAAoDA,EAApD,GAAyDqB,UAAU,CAAC1B,SAAS,EAAV,CAA5E;AACH;;AACD,gBAAMJ,SAAS,GAAGb,YAAY,CAAC+B,MAAD,EAASF,MAAT,EAAiB1B,QAAjB,EAA2BgB,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACyB,QAAL,CAAc,OAAd,CAAvE,CAA9B;AACA,gBAAMC,iBAAiB,GAAGjC,YAAY,CAACC,SAAD,CAAtC;AACAU,UAAAA,QAAQ,GAAGpC,MAAM,CAACqB,MAAP,CAAcrB,MAAM,CAACqB,MAAP,CAAc,EAAd,EAAkBqC,iBAAlB,CAAd,EAAoD;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAApD,CAAX,CA1BoB,CA2BpB;;AACA,cAAI1B,WAAJ,EAAiB;AACbA,YAAAA,WAAW,CAACP,SAAZ,GAAwBA,SAAxB;AACAO,YAAAA,WAAW,CAACc,kBAAZ,GAAiCG,WAAW,CAACC,GAAZ,EAAjC;AACH;AACJ,SAhCD,MAiCK;AACD,gBAAMO,iBAAiB,GAAGjC,YAAY,CAACZ,YAAY,CAAC,CAAD,EAAI,GAAJ,CAAb,CAAtC;AACAuB,UAAAA,QAAQ,GAAG;AACPuB,YAAAA,MAAM,EAAE,MADD;AAEPC,YAAAA,QAAQ,EAAEF,iBAAiB,CAACG;AAFrB,WAAX;AAIH;;AACD,eAAOzB,QAAP;AACH;AAjDE,KAAP;AAmDH,GApED;AAqEH;;AACD,MAAMK,cAAc,GAAItC,KAAD,IAAW,OAAOA,KAAP,KAAiB,QAAnD;;AAEAD,OAAO,CAACI,qBAAR,GAAgCA,qBAAhC","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar generators = require('@motionone/generators');\n\nfunction createGeneratorEasing(createGenerator) {\n    const keyframesCache = new WeakMap();\n    return (options = {}) => {\n        const generatorCache = new Map();\n        const getGenerator = (from = 0, to = 100, velocity = 0, isScale = false) => {\n            const key = `${from}-${to}-${velocity}-${isScale}`;\n            if (!generatorCache.has(key)) {\n                generatorCache.set(key, createGenerator(Object.assign({ from,\n                    to,\n                    velocity, restSpeed: isScale ? 0.05 : 2, restDistance: isScale ? 0.01 : 0.5 }, options)));\n            }\n            return generatorCache.get(key);\n        };\n        const getKeyframes = (generator) => {\n            if (!keyframesCache.has(generator)) {\n                keyframesCache.set(generator, generators.pregenerateKeyframes(generator));\n            }\n            return keyframesCache.get(generator);\n        };\n        return {\n            createAnimation: (keyframes, getOrigin, canUseGenerator, name, motionValue) => {\n                var _a, _b;\n                let settings;\n                const numKeyframes = keyframes.length;\n                let shouldUseGenerator = canUseGenerator &&\n                    numKeyframes <= 2 &&\n                    keyframes.every(isNumberOrNull);\n                if (shouldUseGenerator) {\n                    const target = keyframes[numKeyframes - 1];\n                    const unresolvedOrigin = numKeyframes === 1 ? null : keyframes[0];\n                    let velocity = 0;\n                    let origin = 0;\n                    const prevGenerator = motionValue === null || motionValue === void 0 ? void 0 : motionValue.generator;\n                    if (prevGenerator) {\n                        /**\n                         * If we have a generator for this value we can use it to resolve\n                         * the animations's current value and velocity.\n                         */\n                        const { animation, generatorStartTime } = motionValue;\n                        const startTime = (animation === null || animation === void 0 ? void 0 : animation.startTime) || generatorStartTime || 0;\n                        const currentTime = (animation === null || animation === void 0 ? void 0 : animation.currentTime) || performance.now() - startTime;\n                        const prevGeneratorCurrent = prevGenerator(currentTime).current;\n                        origin = (_a = unresolvedOrigin) !== null && _a !== void 0 ? _a : prevGeneratorCurrent;\n                        if (numKeyframes === 1 ||\n                            (numKeyframes === 2 && keyframes[0] === null)) {\n                            velocity = generators.calcGeneratorVelocity((t) => prevGenerator(t).current, currentTime, prevGeneratorCurrent);\n                        }\n                    }\n                    else {\n                        origin = (_b = unresolvedOrigin) !== null && _b !== void 0 ? _b : parseFloat(getOrigin());\n                    }\n                    const generator = getGenerator(origin, target, velocity, name === null || name === void 0 ? void 0 : name.includes(\"scale\"));\n                    const keyframesMetadata = getKeyframes(generator);\n                    settings = Object.assign(Object.assign({}, keyframesMetadata), { easing: \"linear\" });\n                    // TODO Add test for this\n                    if (motionValue) {\n                        motionValue.generator = generator;\n                        motionValue.generatorStartTime = performance.now();\n                    }\n                }\n                else {\n                    const keyframesMetadata = getKeyframes(getGenerator(0, 100));\n                    settings = {\n                        easing: \"ease\",\n                        duration: keyframesMetadata.overshootDuration,\n                    };\n                }\n                return settings;\n            },\n        };\n    };\n}\nconst isNumberOrNull = (value) => typeof value !== \"string\";\n\nexports.createGeneratorEasing = createGeneratorEasing;\n"]},"metadata":{},"sourceType":"script"}