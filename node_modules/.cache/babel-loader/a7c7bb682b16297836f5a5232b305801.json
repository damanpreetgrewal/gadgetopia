{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daman\\\\Desktop\\\\Final Project\\\\gadgetopia\\\\frontend\\\\src\\\\screens\\\\PaymentMethodScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentMethodScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n\n  if (!shippingAddress) {\n    history.push('/shipping');\n  }\n\n  const [paymentMethod, setPeymentMethod] = useState('paypal');\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod({\n      paymentMethod\n    }));\n    history.push('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \" Select Method \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: `PayPal or Credit Card`,\n            id: \"PayPal\",\n            name: \"paymentMethod\",\n            value: \"PayPal\",\n            defaultChecked: true,\n            onSelect: e => {\n              setPeymentMethod(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Bit\",\n            id: \"Bit\",\n            name: \"paymentMethod\",\n            value: \"Bit\",\n            onSelect: e => {\n              setPeymentMethod(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"outline-primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentMethodScreen, \"y94jl2aoGrnv/EA9agPZKAaxKRk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentMethodScreen;\nexport default PaymentMethodScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMethodScreen\");","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/src/screens/PaymentMethodScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentMethodScreen","history","cart","state","shippingAddress","push","paymentMethod","setPeymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,iBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;;;AAIA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACzC,QAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;;AAEA,MAAI,CAACE,eAAL,EAAsB;AAClBH,IAAAA,OAAO,CAACI,IAAR,CAAa,WAAb;AACH;;AACD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,QAAD,CAAlD;AAGA,QAAMiB,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACT,iBAAiB,CAAC;AAAEO,MAAAA;AAAF,KAAD,CAAlB,CAAR;AACAL,IAAAA,OAAO,CAACI,IAAR,CAAa,aAAb;AACH,GAJD;;AAKA,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEI,aAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAG,uBAFZ;AAGI,YAAA,EAAE,EAAC,QAHP;AAII,YAAA,IAAI,EAAC,eAJT;AAKI,YAAA,KAAK,EAAC,QALV;AAMI,YAAA,cAAc,MANlB;AAOI,YAAA,QAAQ,EAAEC,CAAC,IAAI;AAAEH,cAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAhB;AAAkC;AAPvD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAC,KAFV;AAGI,YAAA,EAAE,EAAC,KAHP;AAII,YAAA,IAAI,EAAC,eAJT;AAKI,YAAA,KAAK,EAAC,KALV;AAMI,YAAA,QAAQ,EAAEH,CAAC,IAAI;AAAEH,cAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAhB;AAAkC;AANvD;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAuBI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAlDD;;GAAMb,mB;UACWJ,W,EASID,W;;;KAVfK,mB;AAoDN,eAAeA,mBAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\n\n\nconst PaymentMethodScreen = ({ history }) => {\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    if (!shippingAddress) {\n        history.push('/shipping')\n    }\n    const [paymentMethod, setPeymentMethod] = useState('paypal')\n\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod({ paymentMethod }))\n        history.push('/placeorder')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler} >\n                <Form.Group className='pb-3'>\n                    <Form.Label as='legend'> Select Method </Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label={`PayPal or Credit Card`}\n                            id='PayPal'\n                            name='paymentMethod'\n                            value='PayPal'\n                            defaultChecked\n                            onSelect={e => { setPeymentMethod(e.target.value) }}>\n                        </Form.Check>\n                        <Form.Check\n                            type='radio'\n                            label='Bit'\n                            id='Bit'\n                            name='paymentMethod'\n                            value='Bit'\n                            onSelect={e => { setPeymentMethod(e.target.value) }}>\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n                <Button type='submit' variant='outline-primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer >\n    )\n}\n\nexport default PaymentMethodScreen\n"]},"metadata":{},"sourceType":"module"}