{"ast":null,"code":"import _slicedToArray from\"C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{saveShippingAddress}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push('/payment');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",required:true,value:address,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",required:true,label:\"Enter city\",value:city,onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",required:true,label:\"Enter postal code\",value:postalCode,onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",required:true,label:\"Enter country\",value:country,onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"outline-primary\",children:\"Continue\"})]})]});};export default ShippingScreen;","map":{"version":3,"sources":["C:/Users/daman/Desktop/Final Project/gadgetopia/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\nconst ShippingScreen = ({ history }) => {\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler} >\n                <Form.Group className='mb-3' controlId='address' >\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type='text' required value={address} onChange={e => setAddress(e.target.value)} ></Form.Control>\n                </Form.Group>\n                <Form.Group className='mb-3' controlId='address'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type='text' required label='Enter city' value={city} onChange={e => setCity(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group className='mb-3' controlId='address'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control type='text' required label='Enter postal code' value={postalCode} onChange={e => setPostalCode(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group className='mb-3' controlId='address'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control type='text' required label='Enter country' value={country} onChange={e => setCountry(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='outline-primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}